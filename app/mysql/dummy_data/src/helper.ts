export interface User {
  user_id: string;
  employee_id: string;
  user_name: string;
  kana: string;
  mail: string;
  password: string;
  entry_date: string;
  office_id: string;
  user_icon_id: string;
  goal: string;
}

export const createName = () => {
  const lastNames = [
    "佐藤",
    "鈴木",
    "高橋",
    "田中",
    "渡辺",
    "伊藤",
    "山本",
    "中村",
    "小林",
    "加藤",
    "吉田",
    "山田",
    "佐々木",
    "山口",
    "斎藤",
    "松本",
    "井上",
    "木村",
    "林",
    "清水",
    "山崎",
    "森",
    "阿部",
    "池田",
    "橋本",
    "山下",
    "石川",
    "中島",
    "前田",
    "藤田",
    "小川",
    "後藤",
    "岡田",
    "長谷川",
    "村上",
    "近藤",
    "石井",
    "齊藤",
    "坂本",
    "遠藤",
    "青木",
    "藤井",
    "西村",
    "福田",
    "太田",
    "三浦",
    "岡本",
    "松田",
    "中川",
    "中野",
    "原田",
    "小野",
    "田村",
    "竹内",
    "金子",
    "和田",
    "中山",
    "藤原",
    "石田",
    "上田",
    "森田",
    "原",
    "柴田",
    "酒井",
    "工藤",
    "横山",
    "宮崎",
    "宮本",
    "内田",
    "高木",
    "安藤",
    "谷口",
    "大野",
    "丸山",
    "今井",
    "高田",
    "藤本",
    "武田",
    "村田",
    "上野",
    "杉山",
    "増田",
    "平野",
    "大塚",
    "千葉",
    "久保",
    "松井",
    "小島",
    "岩崎",
    "桜井",
    "野口",
    "松尾",
    "野村",
    "木下",
    "菊地",
    "佐野",
    "大西",
    "杉本",
    "新井",
    "浜田",
    "菅原",
    "市川",
    "水野",
    "小松",
    "島田",
    "古川",
    "小山",
    "高野",
    "西田",
    "菊池",
    "山内",
    "西川",
    "五十嵐",
    "北村",
    "安田",
    "中田",
    "川口",
    "平田",
    "川崎",
    "飯田",
    "吉川",
    "本田",
    "久保田",
    "沢田",
    "辻",
    "関",
    "吉村",
    "渡部",
    "岩田",
    "中西",
    "服部",
    "樋口",
    "福島",
    "川上",
    "永井",
    "松岡",
    "田口",
    "山中",
    "森本",
    "土屋",
    "矢野",
    "広瀬",
    "秋山",
    "石原",
    "松下",
    "大橋",
    "松浦",
    "吉岡",
    "小池",
    "馬場",
    "浅野",
    "荒木",
    "大久保",
    "野田",
    "小沢",
    "田辺",
    "川村",
    "星野",
    "黒田",
    "堀",
    "尾崎",
    "望月",
    "永田",
    "熊谷",
    "内藤",
    "松村",
    "西山",
    "大谷",
    "平井",
    "大島",
    "岩本",
    "片山",
    "本間",
    "早川",
    "横田",
    "岡崎",
    "荒井",
    "大石",
    "鎌田",
    "成田",
    "宮田",
    "小田",
    "石橋",
    "篠原",
    "須藤",
    "河野",
    "大沢",
    "小西",
    "南",
    "高山",
    "栗原",
    "伊東",
    "松原",
    "三宅",
    "福井",
    "大森",
    "奥村",
    "岡",
    "内山",
    "片岡",
  ];
  const lastNamesKana = [
    "さとう",
    "すずき",
    "たかはし",
    "たなか",
    "わたなべ",
    "いとう",
    "やまもと",
    "なかむら",
    "こばやし",
    "かとう",
    "よしだ",
    "やまだ",
    "ささき",
    "やまぐち",
    "さいとう",
    "まつもと",
    "いのうえ",
    "きむら",
    "はやし",
    "しみず",
    "やまざき",
    "もり",
    "あべ",
    "いけだ",
    "はしもと",
    "やました",
    "いしかわ",
    "なかじま",
    "まえだ",
    "ふじた",
    "おがわ",
    "ごとう",
    "おかだ",
    "はせがわ",
    "むらかみ",
    "こんどう",
    "いしい",
    "さいとう",
    "さかもと",
    "えんどう",
    "あおき",
    "ふじい",
    "にしむら",
    "ふくだ",
    "おおた",
    "みうら",
    "おかもと",
    "まつだ",
    "なかがわ",
    "なかの",
    "はらだ",
    "おの",
    "たむら",
    "たけうち",
    "かねこ",
    "わだ",
    "なかやま",
    "ふじわら",
    "いしだ",
    "うえだ",
    "もりた",
    "はら",
    "しばた",
    "さかい",
    "くどう",
    "よこやま",
    "みやざき",
    "みやもと",
    "うちだ",
    "たかぎ",
    "あんどう",
    "たにぐち",
    "おおの",
    "まるやま",
    "いまい",
    "たかだ",
    "ふじもと",
    "たけだ",
    "むらた",
    "うえの",
    "すぎやま",
    "ますだ",
    "ひらの",
    "おおつか",
    "ちば",
    "くぼ",
    "まつい",
    "こじま",
    "いわさき",
    "さくらい",
    "のぐち",
    "まつお",
    "のむら",
    "きのした",
    "きくち",
    "さの",
    "おおにし",
    "すぎもと",
    "あらい",
    "はまだ",
    "すがわら",
    "いちかわ",
    "みずの",
    "こまつ",
    "しまだ",
    "ふるかわ",
    "こやま",
    "たかの",
    "にしだ",
    "きくち",
    "やまうち",
    "にしかわ",
    "いがらし",
    "きたむら",
    "やすだ",
    "なかた",
    "かわぐち",
    "ひらた",
    "かわさき",
    "いいだ",
    "よしかわ",
    "ほんだ",
    "くぼた",
    "さわだ",
    "つじ",
    "せき",
    "よしむら",
    "わたべ",
    "いわた",
    "なかにし",
    "はっとり",
    "ひぐち",
    "ふくしま",
    "かわかみ",
    "ながい",
    "まつおか",
    "たぐち",
    "やまなか",
    "もりもと",
    "つちや",
    "やの",
    "ひろせ",
    "あきやま",
    "いしはら",
    "まつした",
    "おおはし",
    "まつうら",
    "よしおか",
    "こいけ",
    "ばば",
    "あさの",
    "あらき",
    "おおくぼ",
    "のだ",
    "おざわ",
    "たなべ",
    "かわむら",
    "ほしの",
    "くろだ",
    "ほり",
    "おざき",
    "もちづき",
    "ながた",
    "くまがい",
    "ないとう",
    "まつむら",
    "にしやま",
    "おおたに",
    "ひらい",
    "おおしま",
    "いわもと",
    "かたやま",
    "ほんま",
    "はやかわ",
    "よこた",
    "おかざき",
    "あらい",
    "おおいし",
    "かまだ",
    "なりた",
    "みやた",
    "おだ",
    "いしばし",
    "しのはら",
    "すどう",
    "かわの",
    "おおさわ",
    "こにし",
    "みなみ",
    "たかやま",
    "くりはら",
    "いとう",
    "まつばら",
    "みやけ",
    "ふくい",
    "おおもり",
    "おくむら",
    "おか",
    "うちやま",
    "かたおか",
  ];
  const firstNames = [
    "大輔",
    "誠",
    "直樹",
    "亮",
    "剛",
    "大介",
    "学",
    "健一",
    "健",
    "哲也",
    "聡",
    "健太郎",
    "洋平",
    "淳",
    "竜也",
    "崇",
    "翔太",
    "拓也",
    "健太",
    "翔",
    "達也",
    "雄太",
    "翔平",
    "大樹",
    "大輔",
    "和也",
    "達也",
    "翔太",
    "徹",
    "哲也",
    "秀樹",
    "英樹",
    "浩二",
    "健一",
    "博",
    "博之",
    "修",
    "大輝",
    "拓海",
    "海斗",
    "大輔",
    "大樹",
    "翔太",
    "大輝",
    "翼",
    "拓海",
    "直人",
    "康平",
    "達也",
    "駿",
    "雄大",
    "亮太",
    "拓也",
    "大貴",
    "亮太",
    "拓哉",
    "雄大",
    "誠",
    "隆",
    "茂",
    "豊",
    "明",
    "浩",
    "進",
    "勝",
    "洋子",
    "恵子",
    "京子",
    "幸子",
    "和子",
    "久美子",
    "由美子",
    "裕子",
    "美智子",
    "悦子",
    "智子",
    "久美子",
    "陽子",
    "理恵",
    "真由美",
    "香織",
    "恵",
    "愛",
    "優子",
    "智子",
    "裕美",
    "真由美",
    "めぐみ",
    "美穂",
    "純子",
    "美紀",
    "彩",
    "美穂",
    "成美",
    "沙織",
    "麻衣",
    "舞",
    "愛美",
    "瞳",
    "彩香",
    "麻美",
    "沙織",
    "麻衣",
    "由佳",
    "あゆみ",
    "友美",
    "麻美",
    "裕子",
    "美香",
    "恵美",
    "直美",
    "由美",
    "陽子",
    "直子",
    "未来",
    "萌",
    "美咲",
    "亜美",
    "里奈",
    "菜々子",
    "彩花",
    "遥",
    "美咲",
    "明日香",
    "真由",
    "楓",
    "奈々",
    "彩花",
    "優花",
    "桃子",
    "美咲",
    "佳奈",
    "葵",
    "菜摘",
    "桃子",
    "茜",
    "明美",
    "京子",
    "恵子",
    "洋子",
    "順子",
    "典子",
  ];
  const firstNamesKana = [
    "だいすけ",
    "まこと",
    "なおき",
    "りょう",
    "つよし",
    "だいすけ",
    "まなぶ",
    "けんいち",
    "けん",
    "てつや",
    "さとし",
    "けんたろう",
    "ようへい",
    "じゅん",
    "たつや",
    "たかし",
    "しょうた",
    "たくや",
    "けんた",
    "しょう",
    "たつや",
    "ゆうた",
    "しょうへい",
    "だいき",
    "だいすけ",
    "かずや",
    "たつや",
    "しょうた",
    "とおる",
    "てつや",
    "ひでき",
    "ひでき",
    "こうじ",
    "けんいち",
    "ひろし",
    "ひろゆき",
    "おさむ",
    "だいき",
    "たくみ",
    "かいと",
    "だいすけ",
    "だいき",
    "しょうた",
    "だいき",
    "つばさ",
    "たくみ",
    "なおと",
    "こうへい",
    "たつや",
    "しゅん",
    "ゆうだい",
    "りょうた",
    "たくや",
    "だいき",
    "りょうた",
    "たくや",
    "ゆうだい",
    "まこと",
    "たかし",
    "しげる",
    "ゆたか",
    "あきら",
    "ひろし",
    "すすむ",
    "まさる",
    "ようこ",
    "けいこ",
    "きょうこ",
    "さちこ",
    "かずこ",
    "くみこ",
    "ゆみこ",
    "ゆうこ",
    "みちこ",
    "えつこ",
    "ともこ",
    "くみこ",
    "ようこ",
    "りえ",
    "まゆみ",
    "かおり",
    "めぐみ",
    "あい",
    "ゆうこ",
    "ともこ",
    "ひろみ",
    "まゆみ",
    "めぐみ",
    "みほ",
    "じゅんこ",
    "みき",
    "あや",
    "みほ",
    "なるみ",
    "さおり",
    "まい",
    "まい",
    "まなみ",
    "ひとみ",
    "あやか",
    "まみ",
    "さおり",
    "まい",
    "ゆか",
    "あゆみ",
    "ともみ",
    "まみ",
    "ゆうこ",
    "みか",
    "えみ",
    "なおみ",
    "ゆみ",
    "ようこ",
    "なおこ",
    "みく",
    "もえ",
    "みさき",
    "あみ",
    "りな",
    "ななこ",
    "あやか",
    "はるか",
    "みさき",
    "あすか",
    "まゆ",
    "かえで",
    "なな",
    "あやか",
    "ゆうか",
    "ももこ",
    "みさき",
    "かな",
    "あおい",
    "なつみ",
    "ももこ",
    "あかね",
    "あけみ",
    "きょうこ",
    "けいこ",
    "ようこ",
    "じゅんこ",
    "のりこ",
  ];
  const lastNameIndex = Math.floor(Math.random() * lastNames.length);
  const firstNameIndex = Math.floor(Math.random() * firstNames.length);
  return {
    userName: lastNames[lastNameIndex] + " " + firstNames[firstNameIndex],
    kana: lastNamesKana[lastNameIndex] + " " + firstNamesKana[firstNameIndex],
  };
};

// min以上max以下の整数を返す
export const getRandomInt = (min: number, max: number) => {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1) + min);
};

export interface Department {
  department_id: string;
  department_name: string;
  active: boolean;
}

export const departmentNames = [
  "営業",
  "生産管理",
  "物流",
  "調達",
  "経理",
  "渉外",
  "広報",
  "人事",
  "総務",
  "法務",
];

export interface Role {
  role_id: string;
  role_name: string;
  active: boolean;
}

export const roleNames = [
  // 各ユーザーのインデックスによって、現在の役職が決まる
  // 例えばユーザーのインデックスが0の場合、役職は専務になる
  "一般", // 49900 -
  "主任", // 19900 - 49899
  "課長補佐", // 4900 - 19899
  "課長", // 2900 - 4899
  "部長補佐", // 900 - 2899
  "部長", // 100 - 899
  "執行役員", // 50 - 99
  "常務", // 20 - 49
  "専務", // 0 - 19
];

export const getRoleIndex = (index: number): number => {
  if (index < 20) {
    return roleNames.indexOf("専務");
  } else if (index < 50) {
    return roleNames.indexOf("常務");
  } else if (index < 100) {
    return roleNames.indexOf("執行役員");
  } else if (index < 900) {
    return roleNames.indexOf("部長");
  } else if (index < 2900) {
    return roleNames.indexOf("部長補佐");
  } else if (index < 4900) {
    return roleNames.indexOf("課長");
  } else if (index < 19900) {
    return roleNames.indexOf("課長補佐");
  } else if (index < 49900) {
    return roleNames.indexOf("主任");
  }
  return roleNames.indexOf("一般");
};

// 役職の重み
export const roleWeights = [
  250100 / 300000,
  30000 / 300000,
  15000 / 300000,
  2000 / 300000,
  2000 / 300000,
  800 / 300000,
  50 / 300000,
  30 / 300000,
  20 / 300000,
];

export const getWeightedRoleIndex = () => {
  const totalWeight = roleWeights.reduce((a, b) => a + b, 0);
  const random = Math.random() * totalWeight;
  let cumulativeWeight = 0;

  for (let i = 0; i < roleWeights.length; i++) {
    cumulativeWeight += roleWeights[i];
    if (random < cumulativeWeight) {
      return i;
    }
  }

  return -1;
};

export interface DepartmentRoleMember {
  department_id: string;
  role_id: string;
  user_id: string;
  entry_date: string;
  belong: boolean;
}

export interface Office {
  office_id: string;
  office_name: string;
}

export const officeNames = [
  "北海道",
  "青森",
  "岩手",
  "宮城",
  "秋田",
  "山形",
  "福島",
  "茨城",
  "栃木",
  "群馬",
  "埼玉",
  "千葉",
  "東京",
  "神奈川",
  "新潟",
  "富山",
  "石川",
  "福井",
  "山梨",
  "長野",
  "岐阜",
  "静岡",
  "愛知",
  "三重",
  "滋賀",
  "京都",
  "大阪",
  "兵庫",
  "奈良",
  "和歌山",
];

export interface File {
  file_id: string;
  file_name: string;
  path: string;
}

export const fileNames = [
  "rat.png",
  "ox.png",
  "tiger.png",
  "rabbit.png",
  "dragon.png",
  "snake.png",
  "horse.png",
  "goat.png",
  "monkey.png",
  "rooster.png",
  "dog.png",
  "pig.png",
];

export interface Skill {
  skill_id: string;
  skill_name: string;
}

export const skillNames = [
  "FP3級",
  "FP2級",
  "FP1級",
  "簿記3級",
  "簿記2級",
  "簿記1級",
  "社労士",
  "英検準2級",
  "英検2級",
  "英検準1級",
  "英検1級",
  "TOEIC 600点",
  "TOEIC 650点",
  "TOEIC 700点",
  "TOEIC 750点",
  "TOEIC 800点",
  "TOEIC 850点",
  "TOEIC 900点",
  "TOEIC 950点",
  "TOEIC 990点",
  "TOEFL iBT 70点",
  "TOEFL iBT 80点",
  "TOEFL iBT 90点",
  "TOEFL iBT 100点",
  "TOEFL iBT 110点",
  "TOEFL iBT 120点",
  "行政書士",
  "宅建士",
  "漢検準2級",
  "漢検2級",
  "漢検準1級",
  "漢検1級",
  "秘書検定3級",
  "秘書検定2級",
  "秘書検定準1級",
  "秘書検定1級",
  "ITパスポート",
  "基本情報技術者試験",
  "税理士",
  "司法書士",
  "危険物取扱者 甲種",
  "危険物取扱者 乙種",
  "危険物取扱者 丙種",
];

export interface SkillMember {
  skill_id: string;
  user_id: string;
}

export const goals = [
  "効果的な営業戦略を展開し、市場シェアを20%拡大する。",
  "生産プロセスの改善を推進し、リードタイムを10%短縮する。",
  "在庫管理を正確・効率化し、安定的な供給チェーンを実現する。",
  "最適な資材調達とコスト管理を達成し、原材料比率を5%下げる。",
  "資金管理とキャッシュフローの最適化によって、利益を最大化する。",
  "市場動向の把握に努め、顧客満足度を10%向上させる。",
  "効果的な情報発信とPR戦略により、企業のブランド価値を向上させる。",
  "組織文化の形成と人材の採用・育成を通して組織力を向上させる。",
  "社内設備の管理や安全衛生管理によって、安心して働ける職場を作る。",
  "法令とコンプライアンス遵守を徹底し、適切にリスクを管理する。",
];

export interface MatchGroup {
  match_group_id: string;
  match_group_name: string;
  description: string;
  status: string;
  created_by: string;
  created_at: string;
}

export interface MatchGroupMember {
  match_group_id: string;
  user_id: string;
}
